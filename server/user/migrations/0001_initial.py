# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-11-02 10:00
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('credential', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        ('topic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': '해당 이메일로 가입된 계정이 이미 있습니다.'}, max_length=254, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(blank=True, max_length=128, verbose_name='password')),
                ('description', models.CharField(blank=True, max_length=100)),
                ('profile_image', models.URLField(blank=True)),
                ('facebook_id', models.CharField(blank=True, max_length=100)),
                ('kakao_id', models.CharField(blank=True, max_length=100)),
                ('google_id', models.CharField(blank=True, max_length=100)),
                ('password_reset_key', models.CharField(blank=True, max_length=64, null=True)),
                ('password_reset_key_expires', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('credentials', models.ManyToManyField(blank=True, related_name='user', to='credential.Credential')),
                ('followers', models.ManyToManyField(blank=True, related_name='following_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('topics', models.ManyToManyField(blank=True, related_name='followed_users', to='topic.Topic')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
