# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-11-02 10:00
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('notification', '0001_initial'),
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contents', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserLastNotificationCheck',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='last_notification_check', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='FollowYourQuestionNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('followers', models.ManyToManyField(related_name='follow_your_question_notification', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Question')),
                ('recent_follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_your_question_notification_recent', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='LikeYourAnswerCommentNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.AnswerComment')),
                ('likers', models.ManyToManyField(related_name='like_your_answer_comment_notification', to=settings.AUTH_USER_MODEL)),
                ('recent_liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_your_answer_comment_notification_recent', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='LikeYourAnswerNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Answer')),
                ('likers', models.ManyToManyField(related_name='like_your_answer_notification', to=settings.AUTH_USER_MODEL)),
                ('recent_liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_your_answer_notification_recent', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='LikeYourQuestionCommentNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.QuestionComment')),
                ('likers', models.ManyToManyField(related_name='like_your_question_comment_notification', to=settings.AUTH_USER_MODEL)),
                ('recent_liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_your_question_comment_notification_recent', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='NewAnswerOnQuestionNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Question')),
                ('recent_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_answer_on_question_notification_recent', to=settings.AUTH_USER_MODEL)),
                ('writers', models.ManyToManyField(related_name='new_answer_on_question_notification', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='NewCommentOnYourAnswerNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Answer')),
                ('recent_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_comment_on_your_answer_notification_recent', to=settings.AUTH_USER_MODEL)),
                ('writers', models.ManyToManyField(related_name='new_comment_on_your_answer_notification', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.CreateModel(
            name='NewCommentOnYourQuestionNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='notification.Notification')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.Question')),
                ('recent_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_comment_on_your_question_notification_recent', to=settings.AUTH_USER_MODEL)),
                ('writers', models.ManyToManyField(related_name='new_comment_on_your_question_notification', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('notification.notification',),
        ),
        migrations.AddField(
            model_name='notification',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
    ]
